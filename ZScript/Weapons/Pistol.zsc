Class PistolBurstCounter : Inventory {Default{Inventory.MaxAmount 3;}}

Class PistolSilencer : MO_ZSToken{}

class EnforcerPistol : JMWeapon// replaces Pistol
{
 	Default
	{
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 20;
		Weapon.AmmoType1 "LowCalClip";
		Weapon.AmmoType2 "PistolMagAmmo";
		Obituary "$OB_MPPISTOL";
		+WEAPON.WIMPY_WEAPON;
		Inventory.Pickupmessage "$GOTENFPISTOL";
		Tag "Enforcer Sidearm";
		Scale .55;
		Inventory.PickupSound "weapons/pistol/pickup";
		Inventory.ForbiddenTo "MO_SergeantPlayer";
		Inventory.RestrictedTo "MO_OfficerPlayer";
		+WEAPON.NOALERT;
	}
	States
	{
	ContinueSelect:
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise();
		Goto Ready;
	Ready:
		PSLF ABCDE 0;
	SelectAnimation:
		TNT1 A 0 A_StartSound("weapons/pistol/draw",1);
		PSTD ABCD 1;
	ReadyToFire:
		PSTG A 0 A_SetInventory("PistolBurstCounter",0);
		PSTL A 0 A_JumpIfInventory("PistolSilencer",1,2);
		PSTD E 0;
		#### # 1 JM_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		PSTD DCBA 1;
		PSTG A 0 A_Lower(12);
		Wait;
	Select:
		TNT1 A 0;
		Goto ClearAudioAndResetOverlays;
	Fire:
		PSTG A 0 JM_CheckMag("PistolMagAmmo", "Reload");	
		PSTF A 0
		{
			if(CountInv("PistolSilencer") == 1)
		    {JM_SetWeaponSprite("PSLF");}
		}
		#### A 2 {
			A_FireBullets (5.6, 0, 1, 14, "UpdatedBulletPuff", FBF_NORANDOM,0,"MO_BulletTracer", 0);
				if(CountInv("PistolSilencer") == 1)
				{
					A_StartSound("weapons/pistol/silfire", CHAN_WEAPON);
					A_Overlay(-3, "SilencerSmoke", True);
				}
				else
				{
					A_StartSound("weapons/pistol/fire", CHAN_WEAPON);
					A_AlertMonsters();
				}
			A_TakeInventory("PistolMagAmmo",1,TIF_NOTAKEINFINITE);
			A_SpawnItemEx("GunSmoke",18,0,32,2,0,0);
			JM_CheckForQuadDamage();
			}
		#### A 0 A_SpawnItemEx("PistolCasing",30, -2, 33, random(-2,2), random(-6,-4), random(4,7), 0);
		#### BCD 1 
		{
			if(CountInv("PistolSilencer") == 1)
			{JM_GunRecoil(-0.3, .045);}
			else
			{JM_GunRecoil(-0.6, .09);}
		}
		#### E 1 A_JumpIf(JustPressed(BT_ATTACK), "Fire");
		PSTL A 0 A_JumpIfInventory("PistolSilencer",1,2);
		PSTD E 0;
 		"####" "#######" 1 {
				If(JustPressed(BT_ATTACK))
				{SetWeaponState("Fire");}
				return JM_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD);
			}
		PSTG A 0 JM_CheckMag("PistolMagAmmo", "Reload");
		Goto ReadyToFire;
	AltFire:
		PSTG A 0 JM_CheckMag("PistolMagAmmo", "Reload");
		PSTF A 0 A_JumpIfInventory("PistolBurstCounter", 3, "BurstFinished");
		PSTF A 0
		{
			if(CountInv("PistolSilencer") == 1)
		    {JM_SetWeaponSprite("PSLF");}
		}
		#### A 1 {
			A_FireBullets (5.6, 0, 1, 14, "UpdatedBulletPuff", FBF_NORANDOM,0,"MO_BulletTracer", 0);
			if(CountInv("PistolSilencer") == 1)
			{
				A_StartSound("weapons/pistol/silfire", CHAN_WEAPON);
				A_Overlay(-3, "SilencerSmoke", True);
			}
			else
			{
				A_StartSound("weapons/pistol/fire", CHAN_WEAPON);
				A_AlertMonsters();
			}
			A_TakeInventory("PistolMagAmmo",1,TIF_NOTAKEINFINITE);
			A_SpawnItemEx("GunSmoke",18,0,32,2,0,0);
			JM_CheckForQuadDamage();
			A_GiveInventory("PistolBurstCounter",1);
			}
		#### A 0 A_SpawnItemEx("PistolCasing",30, -2, 33, random(-2,2), random(-6,-4), random(4,7), 0);
		#### B 1
		{
			if(CountInv("PistolSilencer") == 1)
			{JM_GunRecoil(-0.9, .15);}
			else
			{JM_GunRecoil(-1.2, .20);}
		}
		Goto AltFire;
	
	BurstFinished:
		#### CD 1 {
			if(CountInv("PistolSilencer") == 1)
			{JM_GunRecoil(-0.3, .045);}
			else
			{JM_GunRecoil(-0.6, .09);}
		}
		#### E 1;
	BurstFinishedLoop:
		PSTL A 0 A_JumpIfInventory("PistolSilencer",1,2);
		PSTD E 0;
		"####" "#" 1 
		{
			A_SetInventory("PistolBurstCounter",0);
			JM_WeaponReady(WRF_NOFIRE);
		}
		PSTG A 0 A_ReFire("BurstFinishedLoop");
		Goto ReadyToFire;
	
	SilencerSmoke:
		TNT1 A 1;
		PSMC BC 1;
		stop;

	Reload:
		PSTG A 0 A_JumpIfInventory("PistolMagAmmo",12,"ReadyToFire");
		PSTG A 0 A_JumpIfInventory("LowCalClip",1,1);
		Goto ReadyToFire;
		
		PSL1 A 0 A_JumpIfInventory("PistolSilencer",1,2);
		PSR1 A 0;
		#### ABC 1 JM_WeaponReady(WRF_NOFIRE);
		PSL1 A 0;
		PSR2 A 0;
		PSR1 A 0
		{
			if(CountInv("PistolMagAmmo") == 0)
			{JM_SetWeaponSprite("PSR2");}
			if(CountInv("PistolSilencer") == 1)
			{JM_SetWeaponSprite("PSL1");}
		}
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,1);
		#### DEF 1 JM_WeaponReady(WRF_NOFIRE);
		#### A 0 A_StartSound("weapons/pistol/magout",CHAN_AUTO);
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,2);
		#### GHIJ 1 JM_WeaponReady(WRF_NOFIRE);
		#### J 7 
		{
			JM_WeaponReady(WRF_NOFIRE);
			if(CountInv("MO_PowerSpeed") == 1) {A_SetTics(4);}
		}
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,2);
		#### KKLLM 1 JM_WeaponReady(WRF_NOFIRE);
		#### A 0 A_StartSound("weapons/pistol/magin",CHAN_AUTO);
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,2);
		#### MNOPQ 1 JM_WeaponReady(WRF_NOFIRE);
		#### A 0 A_StartSound("weapons/pistol/magclick",CHAN_7);
		#### A 0 A_JumpIf(CountInv("PistolMagAmmo") == 0, "ChamberReload");
		#### A 0 JM_ReloadGun("PistolMagAmmo", "LowCalClip",12,1);
	//	Goto ReloadLoop;
	DoneReload:
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,1);
		#### RR 1 JM_WeaponReady(WRF_NOFIRE);
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,2);
		#### STUVWX 1 JM_WeaponReady(WRF_NOFIRE);
		TNT1 A 0;
		Goto ReadyToFire;
	ChamberReload:
		#### A 0 JM_ReloadGun("PistolMagAmmo", "LowCalClip",12,1);
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,1);
		PSR2 RR 1 JM_WeaponReady(WRF_NOFIRE);
		#### A 0 A_JumpIfInventory("MO_PowerSpeed",1,2);
		PSR2 SSS 1;
		PSR2 TUVW 2;
		TNT1 A 0 A_StartSound("weapons/pistol/chamberback",CHAN_AUTO);
		PSR2 XY 1;
		PSR2 Y 1 A_WeaponOffset(4,34);
		PSR2 Y 1 A_WeaponOffset(8,40);
		PSR2 Z 1 A_WeaponOffset(4,34);
		PSR2 Z 0 A_WeaponOffset(0,32);
		PSR3 A 1;
		TNT1 A 0  A_StartSound("weapons/pistol/chamberforward",CHAN_AUTO);
		PSR3 ABCCCD 1;
		PSR3 EFG 1;
		Goto ReadyToFire;
	ActionSpecial:
		TNT1 A 0 A_JumpIfInventory("PistolSilencer",1,"RemoveSilencer");
		S1LA AB 1;
		PISG A 0 A_StartSound("weapons/pistol/silencerfoley",0);
		S1LA CDE 1;
		S1LA FGHIJKLMN 1;
		PISG A 0 A_StartSound("weapons/pistol/silencerattach1",0);
		S1LA OPQQPPOO 2;
		PISG A 0 A_StartSound("weapons/pistol/silencerattach2",0);
		S1LA OPPQQQ 2;
		S1LA RSTUV 1;
		S1LA VWXYZ 1;
		TNT1 A 0 A_SetInventory("PistolSilencer",1);
		Goto ReadyToFire;
	
	RemoveSilencer:
		S1LB AB 1;
		PISG A 0 A_StartSound("weapons/pistol/silencerfoley",0);
		S1LB CDEF 1;
		PISG A 0 A_StartSound("weapons/pistol/silencerremove1",0);
		S1LB GHHGGF 2;
		PISG A 0 A_StartSound("weapons/pistol/silencerremove2",0);
		S1LB GHHI 2;
		S1LB JKLMNOPQ 1;
		S1LB RSTTTUV 1;
		S1LB VWXY 1;
		TNT1 A 0 A_SetInventory("PistolSilencer",0);
		Goto ReadyToFire;
	Flash:
		TNT1 A 7 Bright A_Light1;
		Goto LightDone;
		TNT1 A 7 Bright A_Light1;
		Goto LightDone;
 	Spawn:
		PISN A -1;
		Stop;
	FlashKick:
		"####" A 0 A_JumpIfInventory("MO_PowerSpeed",1,"FlashKickFast");
		PSTK ABCDE 1;
		PSTK F 6;
		PSTK EDCBA 1;
		Goto ReadyToFire;
	FlashKickFast:
		PSTK ABCDE 1;
		PSTK FF 1;
		PSTK FEDCBA 1;
		Goto ReadyToFire;
	FlashAirKick:
		"####" A 0 A_JumpIfInventory("MO_PowerSpeed",1,"FlashAirKickFast");
		PSTK ABCDEF 1;
		PSTK F 6;
		PSTK EDCBA 1;
		Goto ReadyToFire;
	FlashAirKickFast:
		PSTK ABCDEF 1;
		PSTK FFF 1;
		PSTK FEDCBA 1;
		Goto ReadyToFire;
	}
}

class PistolMagAmmo : Ammo
{
	Default
	{
		Inventory.Amount 0;
		Inventory.MaxAmount 12;
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 12;
		Inventory.Icon "PISNB0";
		+INVENTORY.IGNORESKILL;
	}
}